const API_BASE = 'http://localhost:8080';

const countrySelect = document.getElementById('country');
const citySelect = document.getElementById('city');
const usernameInput = document.getElementById('username');

let isUsernameUnique = false;

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ –ø—Ä–∏ –≤—Ç—Ä–∞—Ç—ñ —Ñ–æ–∫—É—Å—É
usernameInput.addEventListener('blur', async () => {
  const nickname = usernameInput.value.trim();
  if (!nickname) return;

  try {
    const res = await axios.get(`${API_BASE}/auth/isunique/${nickname}`);
    if (res.data === true) {
      isUsernameUnique = true;
      usernameInput.setCustomValidity('');
    } else {
      isUsernameUnique = false;
      usernameInput.setCustomValidity('–Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –∑–∞–π–Ω—è—Ç–µ');
    }
  } catch (err) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ —ñ–º–µ–Ω—ñ', err);
    isUsernameUnique = false;
    usernameInput.setCustomValidity('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å —ñ–º–µ–Ω—ñ');
  }
  usernameInput.reportValidity();
});

// –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—Ä–∞—ó–Ω–∏
window.addEventListener('DOMContentLoaded', async () => {
  try {
    const res = await axios.get(`${API_BASE}/regions/countries`);
    res.data.forEach(country => {
      const option = document.createElement('option');
      option.value = country.id;
      option.textContent = country.name;
      countrySelect.appendChild(option);
    });

    // ‚¨áÔ∏è —è–∫—â–æ —î —Ö–æ—á–∞ –± –æ–¥–Ω–∞ –∫—Ä–∞—ó–Ω–∞ ‚Äî –æ–¥—Ä–∞–∑—É –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º—ñ—Å—Ç–∞ –¥–ª—è –Ω–µ—ó
    if (res.data.length > 0) {
      const firstCountryId = res.data[0].id;
      countrySelect.value = firstCountryId;
      loadCitiesForCountry(firstCountryId);
    }
  } catch (err) {
    console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—Ä–∞—ó–Ω–∏', err);
  }
});

// üîÅ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
async function loadCitiesForCountry(countryId) {
  citySelect.innerHTML = ''; // –æ—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –º—ñ—Å—Ç–∞

  try {
    const res = await axios.get(`${API_BASE}/regions/parent/${countryId}`);
    if (!res.data.length) {
      const option = document.createElement('option');
      option.value = '';
      option.textContent = '–ú—ñ—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
      citySelect.appendChild(option);
      return;
    }

    res.data.forEach(city => {
      const option = document.createElement('option');
      option.value = city.id;
      option.textContent = city.name;
      citySelect.appendChild(option);
    });
  } catch (err) {
    console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º—ñ—Å—Ç–∞', err);
    const option = document.createElement('option');
    option.value = '';
    option.textContent = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è';
    citySelect.appendChild(option);
  }
}

// –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–±–æ—Ä—É –∫—Ä–∞—ó–Ω–∏ (–Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ —ó—Ö –±—É–¥–µ –±—ñ–ª—å—à–µ)
countrySelect.addEventListener('change', (e) => {
  const countryId = e.target.value;
  loadCitiesForCountry(countryId);
});


// –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏
document.getElementById('register-form').addEventListener('submit', async (e) => {
  e.preventDefault();

  const nickname = usernameInput.value.trim();

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å –ø—Ä—è–º–æ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é
  try {
    const res = await axios.get(`${API_BASE}/auth/isunique/${nickname}`);
    if (res.data !== true) {
      alert('–Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∂–µ –∑–∞–π–Ω—è—Ç–µ');
      return;
    }
  } catch (err) {
    alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å —ñ–º–µ–Ω—ñ');
    return;
  }

  const password = document.getElementById('password').value;
  const email = document.getElementById('email').value;
  const birthDate = document.getElementById('birthDate').value;
  const regionId = document.getElementById('city').value;

  const data = {
    id: null,
    username: nickname,
    password,
    avatarId: null,
    role: "USER",
    accSubscribers: 0,
    accFollowings: 0,
    userData: {
      id: null,
      birthDate,
      isArtist: true,
      regionId,
      email
    }
  };

  try {
    const response = await axios.post(`${API_BASE}/auth/sign-up`, data, {
        headers: {
          "Content-Type": "application/json"
        },
        withCredentials: true
      });
    alert('–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');
    console.log(response.data);
  } catch (error) {
    console.error(error);
    alert('–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó');
  }
});
